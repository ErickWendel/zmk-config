/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        holdtolayer: holdtolayer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTOLAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R             &kp T               &kp Y             &kp U  &kp I             &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F             &kp G               &kp H             &kp J  &kp K             &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &holdtolayer 4 V  &holdtolayer 3 B    &holdtolayer 5 N  &kp M  &kp COMMA         &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1             &kp SPACE           &kp RET           &mo 2  &kp LEFT_COMMAND
            >;
        };

        numLayer {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans     &trans     &trans    &trans    &trans
                           &kp DOT  &kp N0  &kp MINUS    &trans  &trans     &trans
            >;
        };

        symLayer {
            bindings = <
&trans  &kp LS(LBRC)   &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RBRC)     &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp LS(COLON)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp CARET      &kp LS(PLUS)     &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp TILDE      &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(PIPE)     &trans  &trans     &trans     &trans    &trans    &trans
                                     &kp LS(LPAR)   &kp LS(RPAR)   &kp LS(UNDER)    &trans  &trans     &trans
            >;
        };

        navlayer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp K_REDO    &kp K_PASTE  &kp K_COPY     &kp K_CUT    &kp K_UNDO  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp CAPSLOCK  &kp LEFT     &kp DOWN       &kp UP       &kp RIGHT   &trans
&trans  &trans    &trans    &trans     &trans     &trans    &kp INSERT    &kp HOME     &kp PAGE_DOWN  &kp PAGE_UP  &kp END     &trans
                            &trans     &to 0      &to 0     &kp RET       &kp BSPC     &kp DEL
            >;
        };

        funlayer {
            bindings = <
&trans       &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&bt BT_CLR   &kp F11  &kp F4  &kp F5  &kp F6  &trans             &trans        &kp LSHFT     &kp LCTRL     &kp LALT      &kp LGUI      &trans
&bootloader  &kp F10  &kp F1  &kp F2  &kp F3  &trans             &bootloader   &trans        &trans        &trans        &trans        &trans
                              &trans  &trans  &kp TAB            &trans        &trans        &trans
            >;
        };

        mouselayer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp K_REDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_UNDO  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans      &kp LEFT     &kp DOWN    &kp UP     &kp RIGHT   &trans
&trans  &trans    &trans    &trans     &trans     &trans    &trans      &trans       &trans      &trans     &trans      &trans
                            &trans     &trans     &trans    &mkp RCLK   &mkp LCLK    &mkp MCLK
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
